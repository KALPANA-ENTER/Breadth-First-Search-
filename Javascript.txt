<script>
BFS(node) {
   let q = new Queue(this.nodes.length);
   let explored = new Set();
   q.enqueue(node);

   add(node);

   while (!q.isEmpty()) {
      let t = q.dequeue();
      console.log(t);
      this.edges[t]
      .filter(n => !explored.has(n))
      .forEach(n => {
         explored.add(n);
         q.enqueue(n);
      });
   }
}

let g = new Graph();
g.addNode("A");
g.addNode("B");
g.addNode("C");
g.addNode("D");
g.addNode("E");
g.addNode("F");
g.addNode("G");

g.addEdge("A", "C");
g.addEdge("A", "B");
g.addEdge("A", "D");
g.addEdge("D", "E");
g.addEdge("E", "F");
g.addEdge("B", "G");

g.BFS("A");
</script>